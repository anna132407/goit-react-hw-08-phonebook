{"version":3,"file":"static/js/413.d1ba4e2d.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nconst selectFilter = state => state.filter.filterValue;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (!contacts) return;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n    );\n  }\n);","import styled from 'styled-components';\n\nexport const TitleH2 = styled.h2`\n  text-align: center;\n  font-size: 28px;\n  font-weight: 700;\n  color: rgb(17, 54, 133);\n  margin-bottom: 40px;\n  @media (min-width: 476px) {\n    font-size: 38px;\n  }\n`;\n\nexport const AddSection = styled.section`\n  margin: 70px auto 0;\n  @media (min-width: 576px) {\n    width: 450px;\n  }\n`;\n\nexport const Form = styled.form`\n  width: 450px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 50px;\n`;\nexport const FormLabel = styled.label`\n  line-height: 1.8;\n  font-size: 16px;\n  font-weight: 400;\n`;\nexport const FormInput = styled.input`\n  border-radius: 5px;\n  padding: 10px;\n  border: 1px solid #000;\n  outline: transparent;\n  \n  }\n`;\nexport const AddButton = styled.button`\n  width: 100px;\n  cursor: pointer;\n  padding: 5px;\n  border-radius: 5px;  \n  font-size: 16px;\n  font-weight: 400;\n  &:hover{\n    background: lightblue;\n  }\n`;","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Notiflix from 'notiflix';\nimport { addContacts } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport {\n  Form,\n  FormLabel,\n  FormInput,\n  AddButton,\n  TitleH2,\n  AddSection,\n} from './ContactForm.styled';\n\nexport function ContactForm() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const inputChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const createContact = e => {\n    e.preventDefault();\n    const isExist = contacts.some(\n      el => el.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isExist) {\n      Notiflix.Notify.failure(`${name} is already in contacts`);\n      resetForm();\n      return;\n    }\n    dispatch(addContacts({ name, number }));\n\n    resetForm();\n  };\n\n  return (\n    <AddSection>\n      <TitleH2>Add contact</TitleH2>\n      <Form onSubmit={createContact}>\n        <FormLabel>\n          Name\n          <FormInput\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"John Smith\"\n            onChange={inputChange}\n          />\n        </FormLabel>\n        <FormLabel>\n          Number\n          <FormInput\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"+380678889900\"\n            onChange={inputChange}\n          />\n        </FormLabel>\n        <AddButton type=\"submit\">Add contact</AddButton>\n      </Form>\n    </AddSection>\n  );\n}","import styled from 'styled-components';\n\nexport const FilterSection = styled.section`\n  margin: 70px auto 0;\n  @media (min-width: 576px) {\n    width: 450px;\n  }\n`;\n\nexport const TitleH2 = styled.h2`\n  text-align: center;\n  font-size: 28px;\n  font-weight: 700;\n  color: rgb(17, 54, 133);\n  margin-bottom: 40px;\n  @media (min-width: 476px) {\n    font-size: 38px;\n  }\n`;\n\nexport const SearchLabel = styled.label`\n  font-size: 24px;\n  font-weight: 400;\n  margin-bottom: 40px;\n  width: 450px;\n`;\nexport const SearchInput = styled.input`\n  border-radius: 5px;\n  padding: 4px;\n  border: 1px solid #000;\n   &:hover{\n    border:1px solid lightblue;\n  }\n`;","import { setFilterValue } from 'redux/contacts/filterSlice';\nimport { useDispatch } from 'react-redux';\nimport {\n  FilterSection,\n  SearchInput,\n  SearchLabel,\n  TitleH2,\n} from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <FilterSection>\n      <TitleH2>Find contact</TitleH2>\n      <SearchLabel>\n        Find contacts by name\n        <SearchInput\n          type=\"text\"\n          name=\"name\"\n          required\n          placeholder=\"Enter name\"\n          onChange={e => dispatch(setFilterValue(e.target.value))}\n        />\n      </SearchLabel>\n    </FilterSection>\n  );\n};","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\ndisplay: flex;\nalign-items: baseline;\n gap: 10px;\n `;\nexport const DelBtn = styled.button`\n  cursor: pointer;\n  width: 70px;\n  padding: 4px;\n  border-radius: 5px;\n  border: 1px solid #000;\n  font-size: 14px;\n  font-weight: 400;\n   &:hover{\n    background: lightblue;\n  }\n  }\n`;\nexport const ContactName = styled.span`\n  font-size: 18px;\n  font-weight: 400;\n`;\nexport const ContactNumber = styled.span`\n  font-size: 18px;\n  font-weight: 400;\n`;\n\nexport const ContactInfo = styled.div`\n  flex-basis: 75%;\n  max-width: 100%;\n  display: flex;\n  gap: 30px;\n  margin-bottom: 10px;\n  @media (min-width: 520px) {\n    margin-bottom: 0;\n    gap: 0;\n  }\n`;","import { PropTypes } from 'prop-types';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  ListItem,\n  DelBtn,\n  ContactName,\n  ContactNumber,\n  ContactInfo,\n} from './ContactItem.styled';\n\nexport const ContactItem = ({ contactInfo }) => {\n  const { id, name, number } = contactInfo;\n  const dispatch = useDispatch();\n  const handleDelete = id => {\n    dispatch(deleteContacts(id));\n  };\n\n  return (\n    <ListItem>\n      <ContactInfo>\n        <ContactName>{name}</ContactName>\n        <ContactNumber>{number}</ContactNumber>\n      </ContactInfo>\n\n      <DelBtn onClick={() => handleDelete(id)}>Delete</DelBtn>\n    </ListItem>\n  );\n};\n\nContactItem.prototype = {\n  contactInfo: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string || PropTypes.number.isRequired,\n  }).isRequired,\n};","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\n\nexport const ContactsSection = styled.section`\n  margin: 70px auto 0;\n  width: 100%;\n  @media (min-width: 576px) {\n    max-width: 800px;\n  }\n`;\n\nexport const TitleH2 = styled.h2`\n  text-align: center;\n  font-size: 28px;\n  font-weight: 700;\n  color: rgb(17, 54, 133);\n  margin-bottom: 70px;\n  @media (min-width: 576px) {\n    font-size: 38px;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectFilteredContacts,\n  selectIsLoading,\n  selectError,\n} from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { useAuth } from 'hooks/useAuth';\nimport { getContacts } from 'redux/contacts/operations';\n\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { ContactsSection, List, TitleH2 } from './ContactList.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const ContactList = () => {\n  const { isLoggedIn } = useAuth();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isLoggedIn) return;\n    dispatch(getContacts());\n  }, [dispatch, isLoggedIn]);\n\n  const contacts = useSelector(selectFilteredContacts);\n\n  return (\n    <ContactsSection>\n      <TitleH2>Contacts</TitleH2>\n      {isLoading && <Loader />}\n      {error && (\n        <p style={{ color: 'red' }}>\n          Sorry, an error occurred! Error: {error}. Please try again later!\n        </p>\n      )}\n      <List>\n        {contacts.map(contact => {\n          return <ContactItem key={contact.id} contactInfo={contact} />;\n        })}\n      </List>\n    </ContactsSection>\n  );\n};","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Container } from 'components/Container/Container.styled';\n\nfunction Contacts() {\n  return (\n    <Container>\n      <>\n        <ContactForm />\n        <Filter />\n        <ContactList />\n      </>\n    </Container>\n  );\n}\nexport default Contacts;"],"names":["selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","filterValue","contact","name","toLowerCase","includes","trim","TitleH2","styled","AddSection","Form","FormLabel","FormInput","AddButton","ContactForm","useSelector","dispatch","useDispatch","useState","setName","number","setNumber","inputChange","e","target","value","resetForm","onSubmit","preventDefault","some","el","Notiflix","addContacts","type","pattern","title","required","placeholder","onChange","FilterSection","SearchLabel","SearchInput","Filter","setFilterValue","ListItem","DelBtn","ContactName","ContactNumber","ContactInfo","ContactItem","contactInfo","id","onClick","deleteContacts","handleDelete","prototype","PropTypes","isRequired","List","ContactsSection","ContactList","isLoggedIn","useAuth","useEffect","getContacts","Loader","style","color","map"],"sourceRoot":""}